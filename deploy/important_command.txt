# Entrar no meu usuario do Google Cloud (soraiapasf@gmail.com)
# Diretorio local: C:\Users\sorai\learning-django\curso-django-projeto1> 

ssh sorai@34.28.197.108 -i 'c:\Users\sorai\.ssh\id_rsa'

# Saber qual eh meu usuario no servidor do GoogleCloud
# Servidor GoogleCloud: sorai@curso-django:~$ 

whoami

# sair do servidor
 sudo reboot
 # ou
 logout

 # trazer arquivos enviados para o git para o servidor Google Cloud
 
 #No computador local
 git add .

 git commit -m 'comentario - ALTERE-ME'

# envia para o GitHub
 git push 

 # envia para o app_bare do Gooble Cloud
 git push app_bare main

 # No servidor do Google Cloud, no diretorio do projeto "sorai@curso-django:~/app_repo$"
 git pull origin main

 # verifica o status do git
 git status

 # SEMPRE ATUALIZE OS ARQUIVOS NO SERVIDOR DO GoogleCloud
  git pull origin main

 # ATIVE O Ambiente Virtual em app_repo
 . venv/bin/activate  

 # Ao subir novamente o código e incluiu Django Debug Toolbar, eh preciso fazer o instalacao desse app
 # Lembre-se de ja ter atualizado e subido para o Github esse arquivo
 # gerar o arquivo no computador local
 pip freeze > requirements.txt

 # instalar o requirements no servidor do GoogleCloud
  pip install -r requirements.txt


# Para além do deploy

# Para verificar a cobertura dos testes e gravar o relatorio em um html
coverage run -m pytest && coverage html  

# Para executar apenas um teste
pytest -k 'test_user_tries_to_logout_another_user' -rP  

# Colocar todos os arquivos estaticos em um unico diretorio
python manage.py collectstatic  

# para instalar o django debug Toolbar
pip install django-debug-toolbar  

# Para jogar o código no servidor e executar todos os comandos de commit e reiniciar o Servidor NgInx

ssh sorai@34.28.197.108 -i 'c:\Users\sorai\.ssh\id_rsa' 
#no servidor você pode executar todos os comandos
' cd ~/app_repo ; git pull origin main ; venv/bin/python manage.py makemigrations ; venv/bin/python manage.py migrate ; sudo systemctl restart curso_django ; sudo systemctl restart nginx ;'

# Caso ocorra erro no servidor, você pode tentar entender, olhando o log de error do servidor
echo '' > gunicorn-error-log
tail - f gunicorn-error-log

# Git - desfazer tudo que eu fiz e voltar ao codigo anterior
git reset --hard